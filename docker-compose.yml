services:
  db:
    image: postgres:16
    container_name: musicdash_db
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - dbdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20

  backend:
    build: ./backend
    container_name: musicdash_backend
    depends_on:
      db:
        condition: service_healthy
    environment:
      SPRING_PROFILES_ACTIVE: ${SPRING_PROFILES_ACTIVE}
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      FILE_STORAGE_DIR: ${FILE_STORAGE_DIR}
      SERVER_PORT: ${SERVER_PORT}
    ports:
      - "${SERVER_PORT:-8080}:8080"
    volumes:
      - uploads:/data/uploads
      - ./storage:/data/storage

  frontend:
    build: ./frontend
    container_name: musicdash_frontend
    depends_on:
      - backend
    ports:
      - "80:80"

volumes:
  dbdata:
  uploads:
